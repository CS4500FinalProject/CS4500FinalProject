
* Iterations:
** Iteration 0

Decide on group project name and project type

** Iteration 1

Discuss about project specifics and difference between levels of the
game (k-2, 3-5, 6-8)

** Iteration 2 (10/29 - 11/5)

Complete the main logic:

Build a tree

Random search


** Iteration 3 (11/5 - 11/ 12)

BFS

Implement 3-5

Increased depth of the tree


** Iteration 4 (11/12 - 11/19)

DFS & BFS
Random search

Data collection (customer decides)


** Iteration 5 (11/19 - 11/26)

Show data on screen

** Iteration 6(11/26 - 12/3)

Polish + documentation wrapped + Prepare presentation

** Iteration 7 (half iteration) (12/3 - 12/6)

Nothing

\pagebreak

<!-- Add Visible Numbers to Binary Search Tree -->
* Todo list
1. Implement (custom)BFS algorithm that customer want
2. Implement (custom)DFS algorithms that customer wants
3. Collect data such as how long it takes to traverse and search
4. Create way to traverse between 2 nodes
5. Maintain and imporve documentation (programmer guide,high and low level) 
6. Implement Ranom search algorithm to illustrate difference
7. Prepare presentation
8. Write user manual
** Git
   1. Update Forks
      https://stackoverflow.com/questions/7244321/how-do-i-update-a-github-forked-repository
      In your local clone of your forked repository, you can add the original GitHub repository as a "remote". ("Remotes" are like nicknames for the URLs of repositories - origin is one, for example.) Then you can fetch all the branches from that upstream repository, and rebase your work to continue working on the upstream version. In terms of commands that might look like:
      #+begin_src bash
      
      

      # Add the remote, call it "upstream":

      git remote add upstream https://github.com/whoever/whatever.git

      # Fetch all the branches of that remote into remote-tracking branches,
      # such as upstream/master:

      git fetch upstream

      # Make sure that you're on your master branch:

      git checkout master

      # Rewrite your master branch so that any commits of yours that
      # aren't already in upstream/master are replayed on top of that
      # other branch:

      git rebase upstream/master
      #+end_src
   3. Keep fork updated
      https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/syncing-a-fork
      #+begin_src bash
      
      #+end_src
   4. Alert when main is updated

* Other things we could add
Add Binary search and teach kids differences between DFS algorithms.
Decide what to put here when we are ahead of schedule.
3 things delivered all separated by grade group

Binary Search Trees

Focus on basics

Solid basic concepts

Data collection and analysis

Trends

6 - 8 at the least

2 games in each

Traversal, Build, Search

Allow larger trees as you go to higher grade levels

K2 : deepest level 2

Pre build caves and have rescue worker save the person via a traversal

DFS or traversals just as illustration

Click a node and illustrate the traversal

Output statistics

3 - 5

Think letters to organize data

6 - 8

Could put a name to the concepts
